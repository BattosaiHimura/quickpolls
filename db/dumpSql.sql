-- MySQL Script generated by MySQL Workbench
-- Mon Apr 11 16:27:09 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema quickPool
-- -----------------------------------------------------
-- RILEVAMENTO TEMPESTIVO DELLA QUALITÀ DELLA DIDATTICA

-- -----------------------------------------------------
-- Schema quickPool
--
-- RILEVAMENTO TEMPESTIVO DELLA QUALITÀ DELLA DIDATTICA
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `quickPool` DEFAULT CHARACTER SET utf8 ;
USE `quickPool` ;

-- -----------------------------------------------------
-- Table `quickPool`.`User_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`User_type` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`User_type` (
  `idUserType` INT NOT NULL AUTO_INCREMENT COMMENT 'TypeUser is a table that encloses all type of users that have an access on our service.',
  `description` VARCHAR(45) NOT NULL,
  `dateFrom` DATETIME NOT NULL,
  `dateTo` DATETIME NOT NULL,
  PRIMARY KEY (`idUserType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quickPool`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`User` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`User` (
  `idUser` INT NOT NULL AUTO_INCREMENT COMMENT 'Table User contains all user that should use the Quick-Pool service.',
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `matricola` VARCHAR(10) NULL COMMENT 'If the User it a student, otherwise the field must be void.',
  `UserType_idUserType` INT NOT NULL,
  PRIMARY KEY (`idUser`),
  INDEX `fk_User_UserType_idx` (`UserType_idUserType` ASC),
  CONSTRAINT `fk_User_UserType`
    FOREIGN KEY (`UserType_idUserType`)
    REFERENCES `quickPool`.`User_type` (`idUserType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quickPool`.`Pwd`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`Pwd` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`Pwd` (
  `idPwd` INT NOT NULL AUTO_INCREMENT,
  `pwd` CHAR(64) NOT NULL COMMENT 'SHA256 is always 256 bits long, equivalent to 32 bytes, or 64 bytes in an hexadecimal string format.',
  PRIMARY KEY (`idPwd`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quickPool`.`User_has_Pwd`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`User_has_Pwd` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`User_has_Pwd` (
  `User_idUser` INT NOT NULL,
  `Pwd_idPwd` INT NOT NULL,
  `dateFrom` DATETIME NOT NULL,
  `dateTo` DATETIME NOT NULL,
  PRIMARY KEY (`User_idUser`, `Pwd_idPwd`),
  INDEX `fk_User_has_Pwd_Pwd1_idx` (`Pwd_idPwd` ASC),
  INDEX `fk_User_has_Pwd_User1_idx` (`User_idUser` ASC),
  CONSTRAINT `fk_User_has_Pwd_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `quickPool`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Pwd_Pwd1`
    FOREIGN KEY (`Pwd_idPwd`)
    REFERENCES `quickPool`.`Pwd` (`idPwd`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quickPool`.`Course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`Course` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`Course` (
  `idCourse` INT NOT NULL AUTO_INCREMENT,
  `dateFrom` DATETIME NOT NULL,
  `dateTo` DATETIME NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(300) NOT NULL,
  `session` VARCHAR(45) NOT NULL COMMENT 'academic year',
  PRIMARY KEY (`idCourse`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quickPool`.`Prof_has_Course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`Prof_has_Course` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`Prof_has_Course` (
  `User_idUser` INT NOT NULL,
  `Course_idCourse` INT NOT NULL,
  `isLab` TINYINT(1) NOT NULL COMMENT 'Indicate if prof. has a part of the corse in object',
  `presence` INT NOT NULL COMMENT 'It represents the percentage of participation for the prof. if there are more than one teachers for that course.',
  PRIMARY KEY (`User_idUser`, `Course_idCourse`),
  INDEX `fk_User_has_Course_Course1_idx` (`Course_idCourse` ASC),
  INDEX `fk_User_has_Course_User1_idx` (`User_idUser` ASC),
  CONSTRAINT `fk_User_has_Course_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `quickPool`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Course_Course1`
    FOREIGN KEY (`Course_idCourse`)
    REFERENCES `quickPool`.`Course` (`idCourse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quickPool`.`Quality`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`Quality` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`Quality` (
  `idquality` INT NOT NULL AUTO_INCREMENT,
  `vote` DECIMAL(10,0) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idquality`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quickPool`.`Final_vote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`Final_vote` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`Final_vote` (
  `idFinal_vote` INT NOT NULL AUTO_INCREMENT,
  `comment` VARCHAR(300) NULL,
  `tips` VARCHAR(300) NULL,
  `slidesPresent` TINYINT(1) NULL,
  `Quality_idquality` INT NOT NULL,
  `Course_idCourse` INT NOT NULL,
  `User_idUser` INT NOT NULL,
  PRIMARY KEY (`idFinal_vote`),
  INDEX `fk_Final_vote_quality1_idx` (`Quality_idquality` ASC),
  INDEX `fk_Final_vote_Course1_idx` (`Course_idCourse` ASC),
  INDEX `fk_Final_vote_User1_idx` (`User_idUser` ASC),
  CONSTRAINT `fk_Final_vote_quality1`
    FOREIGN KEY (`Quality_idquality`)
    REFERENCES `quickPool`.`Quality` (`idquality`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Final_vote_Course1`
    FOREIGN KEY (`Course_idCourse`)
    REFERENCES `quickPool`.`Course` (`idCourse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Final_vote_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `quickPool`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quickPool`.`Argument`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`Argument` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`Argument` (
  `idArgument` INT NOT NULL AUTO_INCREMENT,
  `Course_idCourse` INT NOT NULL,
  `description` VARCHAR(300) NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`idArgument`, `Course_idCourse`),
  INDEX `fk_Argument_Course1_idx` (`Course_idCourse` ASC),
  CONSTRAINT `fk_Argument_Course1`
    FOREIGN KEY (`Course_idCourse`)
    REFERENCES `quickPool`.`Course` (`idCourse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quickPool`.`DailyLesson`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`DailyLesson` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`DailyLesson` (
  `idPoll` INT NOT NULL AUTO_INCREMENT,
  `comment` VARCHAR(300) NULL,
  `Argument_idArgument` INT NOT NULL,
  `Argument_Course_idCourse` INT NOT NULL,
  `date` DATETIME NOT NULL,
  INDEX `fk_DailyLesson_Argument1_idx` (`Argument_idArgument` ASC, `Argument_Course_idCourse` ASC),
  PRIMARY KEY (`idPoll`),
  CONSTRAINT `fk_DailyLesson_Argument1`
    FOREIGN KEY (`Argument_idArgument` , `Argument_Course_idCourse`)
    REFERENCES `quickPool`.`Argument` (`idArgument` , `Course_idCourse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quickPool`.`DailyLesson_has_User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `quickPool`.`DailyLesson_has_User` ;

CREATE TABLE IF NOT EXISTS `quickPool`.`DailyLesson_has_User` (
  `DailyLesson_idPoll` INT NOT NULL,
  `User_idUser` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `comments` VARCHAR(300) NULL,
  `Quality_idquality` INT NOT NULL,
  PRIMARY KEY (`DailyLesson_idPoll`, `User_idUser`, `Quality_idquality`),
  INDEX `fk_DailyLesson_has_User_User1_idx` (`User_idUser` ASC),
  INDEX `fk_DailyLesson_has_User_DailyLesson1_idx` (`DailyLesson_idPoll` ASC),
  INDEX `fk_DailyLesson_has_User_Quality1_idx` (`Quality_idquality` ASC),
  CONSTRAINT `fk_DailyLesson_has_User_DailyLesson1`
    FOREIGN KEY (`DailyLesson_idPoll`)
    REFERENCES `quickPool`.`DailyLesson` (`idPoll`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DailyLesson_has_User_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `quickPool`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DailyLesson_has_User_Quality1`
    FOREIGN KEY (`Quality_idquality`)
    REFERENCES `quickPool`.`Quality` (`idquality`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
